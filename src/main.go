package main

//生命周期：
/*
1.起初，创世块里面包含了一个 coinbase 交易。在 coinbase 交易中，没有输入，所以也就不需要签名。coinbase 交易的输出包含了一个哈希过的公钥
2.当一个人发送币时，就会创建一笔交易。这笔交易的输入会引用之前交易的输出。每个输入会存储一个公钥（没有被哈希）和整个交易的一个签名。
3.比特币网络中接收到交易的其他节点会对该交易进行验证。除了一些其他事情，他们还会检查：
  在一个输入中，公钥哈希与所引用的输出哈希相匹配（这保证了发送方只能花费属于自己的币）；签名是正确的（这保证了交易是由币的实际拥有者所创建）。
4.当一个矿工准备挖一个新块时，他会将交易放到块中，然后开始挖矿。
5.当新块被挖出来以后，网络中的所有其他节点会接收到一条消息，告诉其他人这个块已经被挖出并被加入到区块链。
6.当一个块被加入到区块链以后，交易就算完成，它的输出就可以在新的交易中被引用。
*/
func main() {
	//bc := NewBlockChain()

	//defer bc.db.Close()

	cli := CLI{}
	cli.Run()
}
